= Introduction

daemon_controller is a library for implementing daemon management capabilities.

Suppose that you have a Ruby on Rails application which uses the Sphinx search
server [1] for full-text searching capbilities. In order to search the index,
the search daemon (searchd) must be running. Furthermore, you're using the Riddle
library [2] for interfacing with the search daemon.

You can write this in your application:

  require 'daemon_controller'
  require 'riddle'
  
  controller = DaemonController.new(
     :identifier    => 'Sphinx search daemon',
     :start_command => 'searchd -c config/sphinx.conf',
     :ping_command  => proc { Riddle::Client.new('localhost', 1234) },
     :pid_file      => 'tmp/pids/sphinx.pid',
     :log_file      => 'log/sphinx.log'
  )
  client = controller.connect do
     Riddle::Client.new('localhost', 1234)
  end
  client.query("some search query...")

controller.connect will start the Sphinx search daemon if it isn't already
started. Then, it will connect to the Sphinx search daemon by running the
given block.

Basically you just tell the library how to start the daemon, how to check
whether it's responding to connections, and which PID file and log file it
uses. daemon_controller will automatically take care of things like:

 * concurrency control, e.g. to ensure that no two processes will try to start
   the Sphinx search daemon at the same time.
 * error handling: if 'searchd' failed to start, then its error message will
   be propagated into the exception that will be thrown. This makes it much
   easier to handle daemon startup errors in your application. This can also
   allow the system administrator to see the error message directly in your
   application, instead of having to consult the daemon's log file.
